---
swagger: '2.0'

info:
  description: This is a documentation for ark-node built with Swagger UI to make testing a breeze. If you find any issues, come over to [https://github.com/faustbrian/ARK-Node-Swagger](https://github.com/faustbrian/ARK-Node-Swagger) to open an issue, or even better, send a PR that fixes the issue.
  version: 1.0.0
  title: ARK Node Documentation

host: api.arknode.net

basePath: "/"

schemes:
- https

parameters:
  ipHeader:
    name: ip
    in: header
    type: string

  portHeader:
    name: port
    in: header
    type: integer
    default: 4001
    required: true
    minLength: 1
    maxLength: 65535

  osHeader:
    name: os
    in: header
    type: string
    maxLength: 64

  nethashHeader:
    name: nethash
    in: header
    type: string
    default: 6e84d08bd299ed97c212c886c98a57e36545c8f5d645ca7eeae63a8bd62d8988
    required: true
    maxLength: 64

  versionHeader:
    name: version
    in: header
    type: string
    default: 1.0.1
    required: true
    maxLength: 11

tags:
- name: Account
  description: ''
- name: Block
  description: ''
- name: Delegate
  description: ''
- name: Loader
  description: ''
- name: MultiSignature
  description: ''
- name: Peer
  description: ''
- name: Signature
  description: ''
- name: Transaction
  description: ''
- name: Transport
  description: ''

paths:
  "/api/accounts/getBalance":
    get:
      tags:
      - Account
      summary: 'Get the balance of an account'
      operationId: accounts.getBalance
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: address
        description: ''
        required: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/AccountsGetBalanceApiResponse'
  "/api/accounts/getPublickey":
    get:
      tags:
      - Account
      summary: 'Get the public key of an account'
      operationId: accounts.getPublickey
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: address
        description: ''
        required: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/AccountsGetPublickeyApiResponse'
  "/api/accounts/delegates/fee":
    get:
      tags:
      - Account
      summary: 'Get the delegate fee of an account'
      operationId: accounts.getDelegatesFee
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/AccountsGetDelegatesFeeApiResponse'
  "/api/accounts/delegates":
    get:
      tags:
      - Account
      summary: 'Get the delegates of an account'
      operationId: accounts.getDelegates
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: orderBy
        description: ''
      - in: query
        type: integer
        name: limit
        description: ''
      - in: query
        type: integer
        name: offset
        description: ''
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/AccountsGetDelegatesApiResponse'
    put:
      tags:
      - Account
      summary: 'Add a new delegate to an account'
      operationId: accounts.addDelegates
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: body
        name: body
        description: ''
        required: true
        schema:
          $ref: '#/definitions/AccountDelegate'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/AccountsAddDelegatesApiResponse'
  "/api/accounts":
    get:
      tags:
      - Account
      summary: 'Returns account information of an address'
      operationId: accounts.getAccount
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: address
        description: ''
        required: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/AccountsGetAccountApiResponse'
  "/api/accounts/getAllAccounts":
    get:
      tags:
      - Account
      summary: 'Get a list of accounts'
      operationId: accounts.getAllAccounts
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/AccountsGetAllAccountsApiResponse'
  "/api/accounts/top":
    get:
      tags:
      - Account
      summary: 'Get a list of top accounts'
      operationId: accounts.top
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: integer
        name: limit
        description: ''
      - in: query
        type: integer
        name: offset
        description: ''
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/AccountsTopApiResponse'
  "/api/accounts/count":
    get:
      tags:
      - Account
      summary: 'Get the count of accounts'
      operationId: accounts.count
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/AccountsCountApiResponse'
  "/api/blocks/get":
    get:
      tags:
      - Block
      summary: 'Get block by id'
      operationId: blocks.getBlock
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: id
        description: 'Get all blocks'
        required: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/BlocksGetBlockApiResponse'
  "/api/blocks":
    get:
      tags:
      - Block
      summary: 'Get all blocks'
      operationId: blocks.getBlocks
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: integer
        name: limit
        description: ''
      - in: query
        type: string
        name: orderBy
        description: ''
      - in: query
        type: integer
        name: offset
        description: ''
      - in: query
        type: string
        name: generatorPublicKey
        description: ''
      - in: query
        type: integer
        name: totalAmount
        description: ''
      - in: query
        type: integer
        name: totalFee
        description: ''
      - in: query
        type: integer
        name: reward
        description: ''
      - in: query
        type: string
        name: previousBlock
        description: ''
      - in: query
        type: integer
        name: height
        description: ''
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/BlocksGetBlocksApiResponse'
  "/api/blocks/getEpoch":
    get:
      tags:
      - Block
      summary: 'Get the blockchain epoch'
      operationId: blocks.getEpoch
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/BlocksGetEpochApiResponse'
  "/api/blocks/getHeight":
    get:
      tags:
      - Block
      summary: 'Get the blockchain height'
      operationId: blocks.getHeight
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/BlocksGetHeightApiResponse'
  "/api/blocks/getNethash":
    get:
      tags:
      - Block
      summary: 'Get the blockchain nethash'
      operationId: blocks.getNethash
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/BlocksGetNethashApiResponse'
  "/api/blocks/getFee":
    get:
      tags:
      - Block
      summary: 'Get the transaction fee for sending "normal" transactions'
      operationId: blocks.getFee
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/BlocksGetFeeApiResponse'
  "/api/blocks/getFees":
    get:
      tags:
      - Block
      summary: 'Get the network fees'
      operationId: blocks.getFees
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/BlocksGetFeesApiResponse'
  "/api/blocks/getMilestone":
    get:
      tags:
      - Block
      summary: 'Get the blockchain milestone'
      operationId: blocks.getMilestone
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/BlocksGetMilestoneApiResponse'
  "/api/blocks/getReward":
    get:
      tags:
      - Block
      summary: 'Get the blockchain reward'
      operationId: blocks.getReward
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/BlocksGetRewardApiResponse'
  "/api/blocks/getSupply":
    get:
      tags:
      - Block
      summary: 'Get the blockchain supply'
      operationId: blocks.getSupply
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/BlocksGetSupplyApiResponse'
  "/api/blocks/getStatus":
    get:
      tags:
      - Block
      summary: 'Get the blockchain status'
      operationId: blocks.getStatus
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/BlocksGetStatusApiResponse'
  "/api/delegates/count":
    get:
      tags:
      - Delegate
      summary: 'Get the count of delegates'
      operationId: delegates.count
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: address
        description: ''
        required: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DelegatesCountApiResponse'
  "/api/delegates/search":
    get:
      tags:
      - Delegate
      summary: 'Search for specific delegates'
      operationId: delegates.search
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: q
        description: ''
        required: true
      - in: query
        type: integer
        name: limit
        description: ''
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DelegatesSearchApiResponse'
  "/api/delegates/voters":
    get:
      tags:
      - Delegate
      summary: 'Get a list of voters for a delegate'
      operationId: delegates.getVoters
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: publicKey
        description: ''
        required: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DelegatesGetVotersApiResponse'
  "/api/delegates/get":
    get:
      tags:
      - Delegate
      summary: 'Get a single delegate'
      operationId: delegates.getDelegate
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: publicKey
        description: ''
      - in: query
        type: string
        name: username
        description: ''
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DelegatesGetDelegateApiResponse'
  "/api/delegates":
    get:
      tags:
      - Delegate
      summary: 'Get all delegates'
      operationId: delegates.getDelegates
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: orderBy
        description: ''
      - in: query
        type: integer
        name: limit
        description: ''
      - in: query
        type: integer
        name: offset
        description: ''
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DelegatesGetDelegatesApiResponse'
    put:
      tags:
      - Delegate
      summary: 'Create a new delegate'
      operationId: delegates.addDelegate
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: body
        name: body
        description: ''
        required: true
        schema:
          $ref: '#/definitions/Delegate'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DelegatesAddDelegateApiResponse'
  "/api/delegates/fee":
    get:
      tags:
      - Delegate
      summary: 'Get the delegate fee'
      operationId: delegates.getFee
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: address
        description: ''
        required: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DelegatesGetFeeApiResponse'
  "/api/delegates/forging/getForgedByAccount":
    get:
      tags:
      - Delegate
      summary: 'Get the amount of ARKs forged by an account'
      operationId: delegates.getForgedByAccount
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: generatorPublicKey
        description: ''
        required: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DelegatesGetForgedByAccountApiResponse'
  "/api/delegates/getNextForgers":
    get:
      tags:
      - Delegate
      summary: 'Get the next forger'
      operationId: delegates.getNextForgers
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: address
        description: ''
        required: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DelegatesGetNextForgersApiResponse'
  "/api/delegates/forging/enable":
    post:
      tags:
      - Delegate
      summary: 'Enable forging for a delegate'
      operationId: delegates.enableForging
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: secret
        description: ''
        required: true
      - in: query
        type: string
        name: publicKey
        description: ''
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DelegatesEnableForgingApiResponse'
  "/api/delegates/forging/disable":
    post:
      tags:
      - Delegate
      summary: 'Disable forging for a delegate'
      operationId: delegates.disableForging
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: secret
        description: ''
        required: true
      - in: query
        type: string
        name: publicKey
        description: ''
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DelegatesDisableForgingApiResponse'
  "/api/loader/status":
    get:
      tags:
      - Loader
      summary: 'Get the blockchain status'
      operationId: loader.status
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/LoaderStatusApiResponse'
  "/api/loader/status/sync":
    get:
      tags:
      - Loader
      summary: 'Get the synchronisation status of the client'
      operationId: loader.sync
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/LoaderSyncApiResponse'
  "/api/loader/autoconfigure":
    get:
      tags:
      - Loader
      summary: 'Auto-configure the client loader'
      operationId: loader.autoconfigure
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/LoaderAutoconfigureApiResponse'
  "/api/multisignatures/pending":
    get:
      tags:
      - MultiSignature
      summary: 'Get pending multi signature transactions'
      operationId: multisignatures.pending
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: publicKey
        description: ''
        required: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/MultisignaturesPendingApiResponse'
  "/api/multisignatures/sign":
    post:
      tags:
      - MultiSignature
      summary: 'Sign a new multi signature'
      operationId: multisignatures.sign
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: secret
        description: ''
        required: true
      - in: query
        type: string
        name: secondSecret
        description: ''
      - in: query
        type: string
        name: publicKey
        description: ''
      - in: query
        type: string
        name: transactionId
        description: ''
        required: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/MultisignaturesSignApiResponse'
  "/api/multisignatures":
    put:
      tags:
      - MultiSignature
      summary: 'Create a new multi signature'
      operationId: multisignatures.addMultisignature
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: body
        name: body
        description: ''
        required: true
        schema:
          $ref: '#/definitions/MultiSignature'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/MultisignaturesAddMultisignatureApiResponse'
  "/api/multisignatures/accounts":
    get:
      tags:
      - MultiSignature
      summary: 'Get a list of accounts'
      operationId: multisignature.getAccounts
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/MultisignatureGetAccountsApiResponse'
  "/api/peers/get":
    get:
      tags:
      - Peer
      summary: 'Get a single peer'
      operationId: peers.getPeer
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: ip
        description: ''
        required: true
      - in: query
        type: integer
        name: port
        description: ''
        required: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/PeersGetPeerApiResponse'
  "/api/peers":
    get:
      tags:
      - Peer
      summary: 'Get all peers'
      operationId: peers.getPeers
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: integer
        name: port
        description: ''
      - in: query
        type: integer
        name: state
        description: ''
      - in: query
        type: string
        name: os
        description: ''
      - in: query
        type: string
        name: version
        description: ''
      - in: query
        type: string
        name: orderBy
        description: ''
      - in: query
        type: integer
        name: limit
        description: ''
      - in: query
        type: integer
        name: offset
        description: ''
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/PeersGetPeersApiResponse'
  "/api/peers/version":
    get:
      tags:
      - Peer
      summary: 'Get the peer version'
      operationId: peers.version
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/PeersVersionApiResponse'
  "/api/signatures/fee":
    get:
      tags:
      - Signature
      summary: 'Get the fee for a signature'
      operationId: signatures.fee
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: address
        description: ''
        required: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SignaturesFeeApiResponse'
  "/api/signatures":
    put:
      tags:
      - Signature
      summary: 'Create a new signature'
      operationId: signatures.addSignature
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: body
        name: body
        description: ''
        required: true
        schema:
          $ref: '#/definitions/Signature'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SignaturesAddSignatureApiResponse'
  "/api/transactions/get":
    get:
      tags:
      - Transaction
      summary: 'Get a single transaction'
      operationId: transactions.getTransaction
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: id
        description: ''
        required: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TransactionsGetTransactionApiResponse'
  "/api/transactions":
    get:
      tags:
      - Transaction
      summary: 'Get all transactions'
      operationId: transactions.getTransactions
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: blockId
        description: ''
      - in: query
        type: integer
        name: limit
        description: ''
      - in: query
        type: integer
        name: type
        description: ''
      - in: query
        type: string
        name: orderBy
        description: ''
      - in: query
        type: integer
        name: offset
        description: ''
      - in: query
        type: string
        name: senderPublicKey
        description: ''
      - in: query
        type: string
        name: vendorField
        description: ''
      - in: query
        type: string
        name: ownerPublicKey
        description: ''
      - in: query
        type: string
        name: ownerAddress
        description: ''
      - in: query
        type: string
        name: senderId
        description: ''
      - in: query
        type: string
        name: recipientId
        description: ''
      - in: query
        type: integer
        name: amount
        description: ''
      - in: query
        type: integer
        name: fee
        description: ''
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TransactionsGetTransactionsApiResponse'
    put:
      tags:
      - Transaction
      summary: 'Create a new transaction'
      operationId: transactions.addTransactions
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: body
        name: body
        description: ''
        required: true
        schema:
          $ref: '#/definitions/Transaction'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TransactionsAddTransactionsApiResponse'
  "/api/transactions/unconfirmed/get":
    get:
      tags:
      - Transaction
      summary: 'Get a single unconfirmed transaction'
      operationId: transactions.getUnconfirmedTransaction
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: id
        description: ''
        required: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TransactionsGetUnconfirmedTransactionApiResponse'
  "/api/transactions/unconfirmed":
    get:
      tags:
      - Transaction
      summary: 'Get all unconfirmed transactions'
      operationId: transactions.getUnconfirmedTransactions
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: senderPublicKey
        description: ''
      - in: query
        type: string
        name: address
        description: ''
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TransactionsGetUnconfirmedTransactionsApiResponse'
  "/peer/list":
    get:
      tags:
      - Transport
      summary: 'Get a list of peers'
      operationId: transport.listBroadcastPeers
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TransportListBroadcastPeersApiResponse'
  "/peer/blocks/common":
    get:
      tags:
      - Transport
      summary: 'Get a list of blocks by ids'
      operationId: transport.commonBlock
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: ids
        description: ''
        required: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TransportCommonBlockApiResponse'
  "/peer/block":
    get:
      tags:
      - Transport
      summary: 'Get a single block'
      operationId: transport.getBlock
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: address
        description: ''
        required: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TransportGetBlockApiResponse'
  "/peer/blocks":
    get:
      tags:
      - Transport
      summary: 'Get all blocks'
      operationId: transport.getBlocks
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: address
        description: ''
        required: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TransportGetBlocksApiResponse'
  "/peer/transactions":
    get:
      tags:
      - Transport
      description: 'Get all transactions'
      operationId: transport.getTransactions
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TransportGetTransactionsApiResponse'
    post:
      tags:
      - Transport
      summary: 'Create a new transaction'
      operationId: transport.addTransactions
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: body
        name: transactions
        description: ''
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/TransportTransaction'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TransportAddTransactionsApiResponse'
  "/peer/transactionsFromIds":
    get:
      tags:
      - Transport
      summary: 'Get a list of transactions by ids'
      operationId: transport.transactionsFromIds
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      - in: query
        type: string
        name: ids
        description: ''
        required: true
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TransportTransactionsFromIdsApiResponse'
  "/peer/height":
    get:
      tags:
      - Transport
      summary: 'Get the blockchain height'
      operationId: transport.height
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TransportHeightApiResponse'
  "/peer/status":
    get:
      tags:
      - Transport
      summary: 'Get the blockchain status'
      operationId: transport.status
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/nethashHeader'
      - $ref: '#/parameters/versionHeader'
      - $ref: '#/parameters/portHeader'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TransportStatusApiResponse'

definitions:

####################################################################################################
## Request Object Definitions ######################################################################
####################################################################################################

  AccountDelegate:
    type: object
    properties:
      secret:
        type: string
        description: ''
      publicKey:
        type: string
        description: ''
      secondSecret:
        type: string
        description: ''

  Delegate:
    type: object
    properties:
      secret:
        type: string
        description: ''
        # required: true
      publicKey:
        type: string
        description: ''
        # required: true
      secondSecret:
        type: string
        description: ''
        # required: true
      username:
        type: string
        description: ''
        # required: true

  MultiSignature:
    type: object
    properties:
      secret:
        type: string
        description: ''
        # required: true
      publicKey:
        type: string
        description: ''
      secondSecret:
        type: string
        description: ''
      min:
        type: string
        description: ''
        # required: true
      lifetime:
        type: string
        description: ''
        # required: true
      keysgroup:
        type: array
        description: ''
        # required: true
        items:
          type: string

  Signature:
    type: object
    properties:
      secret:
        type: string
        description: ''
        # required: true
      secondSecret:
        type: string
        description: ''
        # required: true
      publicKey:
        type: string
        description: ''
        # required: true
      multisigAccountPublicKey:
        type: string
        description: ''
        # required: true

  Transaction:
    type: object
    properties:
      secret:
        type: string
        description: ''
        # required: true
      amount:
        type: integer
        description: ''
        # required: true
      recipientId:
        type: string
        description: ''
        # required: true
      vendorField:
        type: string
        description: ''
      publicKey:
        type: string
        description: ''
      secondSecret:
        type: string
        description: ''
      multisigAccountPublicKey:
        type: string
        description: ''

  TransportTransaction:
    type: object
    properties:
      transactions:
        type: array
        description: ''
        # required: true

####################################################################################################
## Response Object Definitions #####################################################################
####################################################################################################

  AccountsGetBalanceApiResponse:
      type: object
      properties:
        success:
          type: boolean
          description: 'asd'
        balance:
          type: integer
          description: 'asd'
        unconfirmedBalance:
          type: integer
          description: 'asd'

  AccountsGetPublickeyApiResponse:
      type: object
      properties: {}

  AccountsGetDelegatesFeeApiResponse:
      type: object
      properties: {}

  AccountsGetDelegatesApiResponse:
      type: object
      properties: {}

  AccountsAddDelegatesApiResponse:
      type: object
      properties: {}

  AccountsGetAccountApiResponse:
      type: object
      properties: {}

  AccountsGetAllAccountsApiResponse:
      type: object
      properties: {}

  AccountsTopApiResponse:
      type: object
      properties: {}

  AccountsCountApiResponse:
      type: object
      properties: {}

  BlocksGetBlockApiResponse:
      type: object
      properties: {}

  BlocksGetBlocksApiResponse:
      type: object
      properties: {}

  BlocksGetEpochApiResponse:
      type: object
      properties: {}

  BlocksGetHeightApiResponse:
      type: object
      properties: {}

  BlocksGetNethashApiResponse:
      type: object
      properties: {}

  BlocksGetFeeApiResponse:
      type: object
      properties: {}

  BlocksGetFeesApiResponse:
      type: object
      properties: {}

  BlocksGetMilestoneApiResponse:
      type: object
      properties: {}

  BlocksGetRewardApiResponse:
      type: object
      properties: {}

  BlocksGetSupplyApiResponse:
      type: object
      properties: {}

  BlocksGetStatusApiResponse:
      type: object
      properties: {}

  DelegatesCountApiResponse:
      type: object
      properties: {}

  DelegatesSearchApiResponse:
      type: object
      properties: {}

  DelegatesGetVotersApiResponse:
      type: object
      properties: {}

  DelegatesGetDelegateApiResponse:
      type: object
      properties: {}

  DelegatesGetDelegatesApiResponse:
      type: object
      properties: {}

  DelegatesAddDelegateApiResponse:
      type: object
      properties: {}

  DelegatesGetFeeApiResponse:
      type: object
      properties: {}

  DelegatesGetForgedByAccountApiResponse:
      type: object
      properties: {}

  DelegatesGetNextForgersApiResponse:
      type: object
      properties: {}

  DelegatesEnableForgingApiResponse:
      type: object
      properties: {}

  DelegatesDisableForgingApiResponse:
      type: object
      properties: {}

  LoaderStatusApiResponse:
      type: object
      properties: {}

  LoaderSyncApiResponse:
      type: object
      properties: {}

  LoaderAutoconfigureApiResponse:
      type: object
      properties: {}

  MultisignaturesPendingApiResponse:
      type: object
      properties: {}

  MultisignaturesSignApiResponse:
      type: object
      properties: {}

  MultisignaturesAddMultisignatureApiResponse:
      type: object
      properties: {}

  MultisignatureGetAccountsApiResponse:
      type: object
      properties: {}

  PeersGetPeerApiResponse:
      type: object
      properties: {}

  PeersGetPeersApiResponse:
      type: object
      properties: {}

  PeersVersionApiResponse:
      type: object
      properties: {}

  SignaturesFeeApiResponse:
      type: object
      properties: {}

  SignaturesAddSignatureApiResponse:
      type: object
      properties: {}

  TransactionsGetTransactionApiResponse:
      type: object
      properties: {}

  TransactionsGetTransactionsApiResponse:
      type: object
      properties: {}

  TransactionsAddTransactionsApiResponse:
      type: object
      properties: {}

  TransactionsGetUnconfirmedTransactionApiResponse:
      type: object
      properties: {}

  TransactionsGetUnconfirmedTransactionsApiResponse:
      type: object
      properties: {}

  TransportListBroadcastPeersApiResponse:
      type: object
      properties: {}

  TransportCommonBlockApiResponse:
      type: object
      properties: {}

  TransportGetBlockApiResponse:
      type: object
      properties: {}

  TransportGetBlocksApiResponse:
      type: object
      properties: {}

  TransportGetTransactionsApiResponse:
      type: object
      properties: {}

  TransportAddTransactionsApiResponse:
      type: object
      properties: {}

  TransportTransactionsFromIdsApiResponse:
      type: object
      properties: {}

  TransportHeightApiResponse:
      type: object
      properties: {}

  TransportStatusApiResponse:
      type: object
      properties: {}
